{"version":3,"sources":["useBackButton.tsx"],"names":["useBackButton","ref","React","useEffect","subscription","BackHandler","addEventListener","navigation","current","canGoBack","goBack","remove"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAGe,SAASA,aAAT,CACbC,GADa,EAEb;AACAC,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpB,UAAMC,YAAY,GAAGC,yBAAYC,gBAAZ,CACnB,mBADmB,EAEnB,MAAM;AACJ,YAAMC,UAAU,GAAGN,GAAG,CAACO,OAAvB;;AAEA,UAAID,UAAU,IAAI,IAAlB,EAAwB;AACtB,eAAO,KAAP;AACD;;AAED,UAAIA,UAAU,CAACE,SAAX,EAAJ,EAA4B;AAC1BF,QAAAA,UAAU,CAACG,MAAX;AAEA,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD,KAhBkB,CAArB;;AAmBA,WAAO,MAAMN,YAAY,CAACO,MAAb,EAAb;AACD,GArBD,EAqBG,CAACV,GAAD,CArBH;AAsBD","sourcesContent":["import * as React from 'react';\r\nimport { BackHandler } from 'react-native';\r\nimport type { NavigationContainerRef } from '@react-navigation/core';\r\n\r\nexport default function useBackButton(\r\n  ref: React.RefObject<NavigationContainerRef>\r\n) {\r\n  React.useEffect(() => {\r\n    const subscription = BackHandler.addEventListener(\r\n      'hardwareBackPress',\r\n      () => {\r\n        const navigation = ref.current;\r\n\r\n        if (navigation == null) {\r\n          return false;\r\n        }\r\n\r\n        if (navigation.canGoBack()) {\r\n          navigation.goBack();\r\n\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n    );\r\n\r\n    return () => subscription.remove();\r\n  }, [ref]);\r\n}\r\n"]}