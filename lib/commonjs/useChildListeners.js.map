{"version":3,"sources":["useChildListeners.tsx"],"names":["useChildListeners","current","listeners","React","useRef","action","focus","addListener","useCallback","type","listener","push","index","indexOf","splice"],"mappings":";;;;;;;AAAA;;;;;;AAGA;AACA;AACA;AACe,SAASA,iBAAT,GAA6B;AAC1C,QAAM;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAAyBC,KAAK,CAACC,MAAN,CAI7B;AACAC,IAAAA,MAAM,EAAE,EADR;AAEAC,IAAAA,KAAK,EAAE;AAFP,GAJ6B,CAA/B;AASA,QAAMC,WAAW,GAAGJ,KAAK,CAACK,WAAN,CAClB,CAA8BC,IAA9B,EAAuCC,QAAvC,KAAoE;AAClE;AACAR,IAAAA,SAAS,CAACO,IAAD,CAAT,CAAgBE,IAAhB,CAAqBD,QAArB;AAEA,WAAO,MAAM;AACX;AACA,YAAME,KAAK,GAAGV,SAAS,CAACO,IAAD,CAAT,CAAgBI,OAAhB,CAAwBH,QAAxB,CAAd;AAEAR,MAAAA,SAAS,CAACO,IAAD,CAAT,CAAgBK,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACD,KALD;AAMD,GAXiB,EAYlB,CAACV,SAAD,CAZkB,CAApB;AAeA,SAAO;AACLA,IAAAA,SADK;AAELK,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from 'react';\r\nimport type { ListenerMap } from './NavigationBuilderContext';\r\n\r\n/**\r\n * Hook which lets child navigators add action listeners.\r\n */\r\nexport default function useChildListeners() {\r\n  const { current: listeners } = React.useRef<\r\n    {\r\n      [K in keyof ListenerMap]: ListenerMap[K][];\r\n    }\r\n  >({\r\n    action: [],\r\n    focus: [],\r\n  });\r\n\r\n  const addListener = React.useCallback(\r\n    <T extends keyof ListenerMap>(type: T, listener: ListenerMap[T]) => {\r\n      // @ts-expect-error: listener should be correct type according to `type`\r\n      listeners[type].push(listener);\r\n\r\n      return () => {\r\n        // @ts-expect-error: listener should be correct type according to `type`\r\n        const index = listeners[type].indexOf(listener);\r\n\r\n        listeners[type].splice(index, 1);\r\n      };\r\n    },\r\n    [listeners]\r\n  );\r\n\r\n  return {\r\n    listeners,\r\n    addListener,\r\n  };\r\n}\r\n"]}