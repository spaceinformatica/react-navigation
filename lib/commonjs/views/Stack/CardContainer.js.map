{"version":3,"sources":["CardContainer.tsx"],"names":["EPSILON","CardContainer","active","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","closing","gesture","focused","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","getPreviousScene","getFocusedRoute","mode","headerMode","headerShown","headerStyleInterpolator","hasAbsoluteHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","index","layout","onCloseRoute","onOpenRoute","onPageChangeCancel","onPageChangeConfirm","onPageChangeStart","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","transitionSpec","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransition","insets","top","right","bottom","left","colors","pointerEvents","setPointerEvents","React","useState","useEffect","listener","progress","next","addListener","value","removeListener","isCurrentHeaderShown","previousScene","current","marginTop","backgroundColor","background","overflow","undefined","StyleSheet","absoluteFill","styles","container","scenes","styleInterpolator","onContentHeightChange","memo","create","flex","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Animated, View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\r\nimport { Route, useTheme } from '@react-navigation/native';\r\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\r\nimport Card from './Card';\r\nimport HeaderHeightContext from '../../utils/HeaderHeightContext';\r\nimport HeaderShownContext from '../../utils/HeaderShownContext';\r\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\r\nimport type {\r\n  Scene,\r\n  Layout,\r\n  StackHeaderMode,\r\n  StackCardMode,\r\n  TransitionPreset,\r\n} from '../../types';\r\n\r\ntype Props = TransitionPreset & {\r\n  index: number;\r\n  active: boolean;\r\n  focused: boolean;\r\n  closing: boolean;\r\n  layout: Layout;\r\n  gesture: Animated.Value;\r\n  scene: Scene<Route<string>>;\r\n  safeAreaInsetTop: number;\r\n  safeAreaInsetRight: number;\r\n  safeAreaInsetBottom: number;\r\n  safeAreaInsetLeft: number;\r\n  cardOverlay?: (props: {\r\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n  }) => React.ReactNode;\r\n  cardOverlayEnabled?: boolean;\r\n  cardShadowEnabled?: boolean;\r\n  cardStyle?: StyleProp<ViewStyle>;\r\n  getPreviousScene: (props: {\r\n    route: Route<string>;\r\n  }) => Scene<Route<string>> | undefined;\r\n  getFocusedRoute: () => Route<string>;\r\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\r\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\r\n  onOpenRoute: (props: { route: Route<string> }) => void;\r\n  onCloseRoute: (props: { route: Route<string> }) => void;\r\n  onTransitionStart?: (\r\n    props: { route: Route<string> },\r\n    closing: boolean\r\n  ) => void;\r\n  onTransitionEnd?: (props: { route: Route<string> }, closing: boolean) => void;\r\n  onPageChangeStart?: () => void;\r\n  onPageChangeConfirm?: (force: boolean) => void;\r\n  onPageChangeCancel?: () => void;\r\n  onGestureStart?: (props: { route: Route<string> }) => void;\r\n  onGestureEnd?: (props: { route: Route<string> }) => void;\r\n  onGestureCancel?: (props: { route: Route<string> }) => void;\r\n  gestureEnabled?: boolean;\r\n  gestureResponseDistance?: {\r\n    vertical?: number;\r\n    horizontal?: number;\r\n  };\r\n  gestureVelocityImpact?: number;\r\n  mode: StackCardMode;\r\n  headerMode: StackHeaderMode;\r\n  headerShown: boolean;\r\n  hasAbsoluteHeader: boolean;\r\n  headerHeight: number;\r\n  onHeaderHeightChange: (props: {\r\n    route: Route<string>;\r\n    height: number;\r\n  }) => void;\r\n  isParentHeaderShown: boolean;\r\n};\r\n\r\nconst EPSILON = 0.1;\r\n\r\nfunction CardContainer({\r\n  active,\r\n  cardOverlay,\r\n  cardOverlayEnabled,\r\n  cardShadowEnabled,\r\n  cardStyle,\r\n  cardStyleInterpolator,\r\n  closing,\r\n  gesture,\r\n  focused,\r\n  gestureDirection,\r\n  gestureEnabled,\r\n  gestureResponseDistance,\r\n  gestureVelocityImpact,\r\n  getPreviousScene,\r\n  getFocusedRoute,\r\n  mode,\r\n  headerMode,\r\n  headerShown,\r\n  headerStyleInterpolator,\r\n  hasAbsoluteHeader,\r\n  headerHeight,\r\n  onHeaderHeightChange,\r\n  isParentHeaderShown,\r\n  index,\r\n  layout,\r\n  onCloseRoute,\r\n  onOpenRoute,\r\n  onPageChangeCancel,\r\n  onPageChangeConfirm,\r\n  onPageChangeStart,\r\n  onGestureCancel,\r\n  onGestureEnd,\r\n  onGestureStart,\r\n  onTransitionEnd,\r\n  onTransitionStart,\r\n  renderHeader,\r\n  renderScene,\r\n  safeAreaInsetBottom,\r\n  safeAreaInsetLeft,\r\n  safeAreaInsetRight,\r\n  safeAreaInsetTop,\r\n  scene,\r\n  transitionSpec,\r\n}: Props) {\r\n  const handleOpen = () => {\r\n    const { route } = scene;\r\n\r\n    onTransitionEnd?.({ route }, false);\r\n    onOpenRoute({ route });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    const { route } = scene;\r\n\r\n    onTransitionEnd?.({ route }, true);\r\n    onCloseRoute({ route });\r\n  };\r\n\r\n  const handleGestureBegin = () => {\r\n    const { route } = scene;\r\n\r\n    onPageChangeStart?.();\r\n    onGestureStart?.({ route });\r\n  };\r\n\r\n  const handleGestureCanceled = () => {\r\n    const { route } = scene;\r\n\r\n    onPageChangeCancel?.();\r\n    onGestureCancel?.({ route });\r\n  };\r\n\r\n  const handleGestureEnd = () => {\r\n    const { route } = scene;\r\n\r\n    onGestureEnd?.({ route });\r\n  };\r\n\r\n  const handleTransition = ({\r\n    closing,\r\n    gesture,\r\n  }: {\r\n    closing: boolean;\r\n    gesture: boolean;\r\n  }) => {\r\n    const { route } = scene;\r\n\r\n    if (!gesture) {\r\n      onPageChangeConfirm?.(true);\r\n    } else if (active && closing) {\r\n      onPageChangeConfirm?.(false);\r\n    } else {\r\n      onPageChangeCancel?.();\r\n    }\r\n\r\n    onTransitionStart?.({ route }, closing);\r\n  };\r\n\r\n  const insets = {\r\n    top: safeAreaInsetTop,\r\n    right: safeAreaInsetRight,\r\n    bottom: safeAreaInsetBottom,\r\n    left: safeAreaInsetLeft,\r\n  };\r\n\r\n  const { colors } = useTheme();\r\n\r\n  const [pointerEvents, setPointerEvents] = React.useState<'box-none' | 'none'>(\r\n    'box-none'\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    // @ts-expect-error: AnimatedInterpolation optionally has addListener, but the type defs don't think so\r\n    const listener = scene.progress.next?.addListener?.(\r\n      ({ value }: { value: number }) => {\r\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      if (listener) {\r\n        // @ts-expect-error: AnimatedInterpolation optionally has removedListener, but the type defs don't think so\r\n        scene.progress.next?.removeListener?.(listener);\r\n      }\r\n    };\r\n  }, [pointerEvents, scene.progress.next]);\r\n\r\n  const isCurrentHeaderShown = headerMode !== 'none' && headerShown !== false;\r\n  const previousScene = getPreviousScene({ route: scene.route });\r\n\r\n  return (\r\n    <Card\r\n      index={index}\r\n      gestureDirection={gestureDirection}\r\n      layout={layout}\r\n      insets={insets}\r\n      gesture={gesture}\r\n      current={scene.progress.current}\r\n      next={scene.progress.next}\r\n      closing={closing}\r\n      onOpen={handleOpen}\r\n      onClose={handleClose}\r\n      overlay={cardOverlay}\r\n      overlayEnabled={cardOverlayEnabled}\r\n      shadowEnabled={cardShadowEnabled}\r\n      onTransition={handleTransition}\r\n      onGestureBegin={handleGestureBegin}\r\n      onGestureCanceled={handleGestureCanceled}\r\n      onGestureEnd={handleGestureEnd}\r\n      gestureEnabled={gestureEnabled}\r\n      gestureResponseDistance={gestureResponseDistance}\r\n      gestureVelocityImpact={gestureVelocityImpact}\r\n      transitionSpec={transitionSpec}\r\n      styleInterpolator={cardStyleInterpolator}\r\n      accessibilityElementsHidden={!focused}\r\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\r\n      pointerEvents={active ? 'box-none' : pointerEvents}\r\n      pageOverflowEnabled={headerMode === 'screen' && mode === 'card'}\r\n      containerStyle={hasAbsoluteHeader ? { marginTop: headerHeight } : null}\r\n      contentStyle={[{ backgroundColor: colors.background }, cardStyle]}\r\n      style={[\r\n        {\r\n          // This is necessary to avoid unfocused larger pages increasing scroll area\r\n          // The issue can be seen on the web when a smaller screen is pushed over a larger one\r\n          overflow: active ? undefined : 'hidden',\r\n        },\r\n        StyleSheet.absoluteFill,\r\n      ]}\r\n    >\r\n      <View style={styles.container}>\r\n        <View style={styles.scene}>\r\n          <PreviousSceneContext.Provider value={previousScene}>\r\n            <HeaderShownContext.Provider\r\n              value={isParentHeaderShown || isCurrentHeaderShown}\r\n            >\r\n              <HeaderHeightContext.Provider value={headerHeight}>\r\n                {renderScene({ route: scene.route })}\r\n              </HeaderHeightContext.Provider>\r\n            </HeaderShownContext.Provider>\r\n          </PreviousSceneContext.Provider>\r\n        </View>\r\n        {headerMode === 'screen'\r\n          ? renderHeader({\r\n              mode: 'screen',\r\n              layout,\r\n              insets,\r\n              scenes: [previousScene, scene],\r\n              getPreviousScene,\r\n              getFocusedRoute,\r\n              gestureDirection,\r\n              styleInterpolator: headerStyleInterpolator,\r\n              onContentHeightChange: onHeaderHeightChange,\r\n            })\r\n          : null}\r\n      </View>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default React.memo(CardContainer);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  scene: {\r\n    flex: 1,\r\n  },\r\n});\r\n"]}