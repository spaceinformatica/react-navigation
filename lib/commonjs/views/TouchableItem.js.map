{"version":3,"sources":["TouchableItem.tsx"],"names":["ANDROID_VERSION_LOLLIPOP","TouchableItem","borderless","pressColor","style","children","rest","Platform","OS","Version","TouchableNativeFeedback","canUseNativeForeground","Ripple","React","Children","only"],"mappings":";;;;;;;AAOA;;AACA;;;;;;;;AAiBA,MAAMA,wBAAwB,GAAG,EAAjC;;AAEe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,UAAU,GAAG,KADuB;AAEpCC,EAAAA,UAAU,GAAG,oBAFuB;AAGpCC,EAAAA,KAHoC;AAIpCC,EAAAA,QAJoC;AAKpC,KAAGC;AALiC,CAAvB,EAML;AACR;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,MACEC,sBAASC,EAAT,KAAgB,SAAhB,IACAD,sBAASE,OAAT,IAAoBT,wBAFtB,EAGE;AACA,wBACE,oBAAC,oCAAD,eACMM,IADN;AAEE,MAAA,aAAa,EAAEI,qCAAwBC,sBAAxB,EAFjB;AAGE,MAAA,UAAU,EAAED,qCAAwBE,MAAxB,CAA+BT,UAA/B,EAA2CD,UAA3C;AAHd,qBAKE,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAEE;AAAb,OAAqBS,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBV,QAApB,CAArB,CALF,CADF;AASD,GAbD,MAaO;AACL,wBACE,oBAAC,6BAAD;AAAkB,MAAA,KAAK,EAAED;AAAzB,OAAoCE,IAApC,GACGD,QADH,CADF;AAKD;AACF","sourcesContent":["/**\r\n * TouchableItem provides an abstraction on top of TouchableNativeFeedback and\r\n * TouchableOpacity to handle platform differences.\r\n *\r\n * On Android, you can pass the props of TouchableNativeFeedback.\r\n * On other platforms, you can pass the props of TouchableOpacity.\r\n */\r\nimport * as React from 'react';\r\nimport {\r\n  Platform,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  View,\r\n  ViewProps,\r\n} from 'react-native';\r\n\r\nexport type Props = ViewProps & {\r\n  pressColor?: string;\r\n  disabled?: boolean;\r\n  borderless?: boolean;\r\n  delayPressIn?: number;\r\n  onPress?: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst ANDROID_VERSION_LOLLIPOP = 21;\r\n\r\nexport default function TouchableItem({\r\n  borderless = false,\r\n  pressColor = 'rgba(0, 0, 0, .32)',\r\n  style,\r\n  children,\r\n  ...rest\r\n}: Props) {\r\n  /*\r\n   * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\r\n   * therefore only enable it on Android Lollipop and above.\r\n   *\r\n   * All touchables on Android should have the ripple effect according to\r\n   * platform design guidelines.\r\n   * We need to pass the background prop to specify a borderless ripple effect.\r\n   */\r\n  if (\r\n    Platform.OS === 'android' &&\r\n    Platform.Version >= ANDROID_VERSION_LOLLIPOP\r\n  ) {\r\n    return (\r\n      <TouchableNativeFeedback\r\n        {...rest}\r\n        useForeground={TouchableNativeFeedback.canUseNativeForeground()}\r\n        background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\r\n      >\r\n        <View style={style}>{React.Children.only(children)}</View>\r\n      </TouchableNativeFeedback>\r\n    );\r\n  } else {\r\n    return (\r\n      <TouchableOpacity style={style} {...rest}>\r\n        {children}\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n"]}