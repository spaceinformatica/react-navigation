{"version":3,"sources":["Header.tsx"],"names":["React","memo","Header","props","scene","previous","layout","insets","navigation","styleInterpolator","options","descriptor","title","headerTitle","undefined","route","name","leftLabel","headerBackTitle","o","goBack","useCallback","isFocused","canGoBack","dispatch","StackActions","pop","source","key"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;4BAGeA,KAAK,CAACC,IAAN,CAAW,SAASC,MAAT,CAAgBC,KAAhB,EAAyC;AACjE,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA;AANI,MAOFN,KAPJ;AAQA,QAAM;AAAEO,IAAAA;AAAF,MAAcN,KAAK,CAACO,UAA1B;AACA,QAAMC,KAAK,GACT,OAAOF,OAAO,CAACG,WAAf,KAA+B,UAA/B,IACAH,OAAO,CAACG,WAAR,KAAwBC,SADxB,GAEIJ,OAAO,CAACG,WAFZ,GAGIH,OAAO,CAACE,KAAR,KAAkBE,SAAlB,GACAJ,OAAO,CAACE,KADR,GAEAR,KAAK,CAACW,KAAN,CAAYC,IANlB;AAQA,MAAIC,SAAJ,CAlBiE,CAoBjE;AACA;;AACA,MAAIP,OAAO,CAACQ,eAAR,KAA4BJ,SAAhC,EAA2C;AACzCG,IAAAA,SAAS,GAAGP,OAAO,CAACQ,eAApB;AACD,GAFD,MAEO,IAAIb,QAAJ,EAAc;AACnB,UAAMc,CAAC,GAAGd,QAAQ,CAACM,UAAT,CAAoBD,OAA9B;AAEAO,IAAAA,SAAS,GACP,OAAOE,CAAC,CAACN,WAAT,KAAyB,UAAzB,IAAuCM,CAAC,CAACN,WAAF,KAAkBC,SAAzD,GACIK,CAAC,CAACN,WADN,GAEIM,CAAC,CAACP,KAAF,KAAYE,SAAZ,GACAK,CAAC,CAACP,KADF,GAEAP,QAAQ,CAACU,KAAT,CAAeC,IALrB;AAMD,GAjCgE,CAmCjE;;;AACA,QAAMI,MAAM,GAAGpB,KAAK,CAACqB,WAAN,CACb,uBAAS,MAAM;AACb,QAAIb,UAAU,CAACc,SAAX,MAA0Bd,UAAU,CAACe,SAAX,EAA9B,EAAsD;AACpDf,MAAAA,UAAU,CAACgB,QAAX,CAAoB,EAClB,GAAGC,qBAAaC,GAAb,EADe;AAElBC,QAAAA,MAAM,EAAEvB,KAAK,CAACW,KAAN,CAAYa;AAFF,OAApB;AAID;AACF,GAPD,EAOG,EAPH,CADa,EASb,CAACpB,UAAD,EAAaJ,KAAK,CAACW,KAAN,CAAYa,GAAzB,CATa,CAAf;AAYA,sBACE,oBAAC,sBAAD,eACMlB,OADN;AAEE,IAAA,MAAM,EAAEH,MAFV;AAGE,IAAA,MAAM,EAAED,MAHV;AAIE,IAAA,KAAK,EAAEF,KAJT;AAKE,IAAA,KAAK,EAAEQ,KALT;AAME,IAAA,SAAS,EAAEK,SANb;AAOE,IAAA,WAAW,EACT,OAAOP,OAAO,CAACG,WAAf,KAA+B,UAA/B,GACKV,KAAD,iBAAkC,oBAAC,oBAAD,EAAiBA,KAAjB,CADtC,GAEIO,OAAO,CAACG,WAVhB;AAYE,IAAA,QAAQ,EAAER,QAAQ,GAAGe,MAAH,GAAYN,SAZhC;AAaE,IAAA,iBAAiB,EAAEL;AAbrB,KADF;AAiBD,CAjEc,C","sourcesContent":["import * as React from 'react';\r\nimport { StackActions } from '@react-navigation/native';\r\n\r\nimport HeaderSegment from './HeaderSegment';\r\nimport HeaderTitle from './HeaderTitle';\r\nimport debounce from '../../utils/debounce';\r\nimport type { StackHeaderProps, StackHeaderTitleProps } from '../../types';\r\n\r\nexport default React.memo(function Header(props: StackHeaderProps) {\r\n  const {\r\n    scene,\r\n    previous,\r\n    layout,\r\n    insets,\r\n    navigation,\r\n    styleInterpolator,\r\n  } = props;\r\n  const { options } = scene.descriptor;\r\n  const title =\r\n    typeof options.headerTitle !== 'function' &&\r\n    options.headerTitle !== undefined\r\n      ? options.headerTitle\r\n      : options.title !== undefined\r\n      ? options.title\r\n      : scene.route.name;\r\n\r\n  let leftLabel;\r\n\r\n  // The label for the left back button shows the title of the previous screen\r\n  // If a custom label is specified, we use it, otherwise use previous screen's title\r\n  if (options.headerBackTitle !== undefined) {\r\n    leftLabel = options.headerBackTitle;\r\n  } else if (previous) {\r\n    const o = previous.descriptor.options;\r\n\r\n    leftLabel =\r\n      typeof o.headerTitle !== 'function' && o.headerTitle !== undefined\r\n        ? o.headerTitle\r\n        : o.title !== undefined\r\n        ? o.title\r\n        : previous.route.name;\r\n  }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const goBack = React.useCallback(\r\n    debounce(() => {\r\n      if (navigation.isFocused() && navigation.canGoBack()) {\r\n        navigation.dispatch({\r\n          ...StackActions.pop(),\r\n          source: scene.route.key,\r\n        });\r\n      }\r\n    }, 50),\r\n    [navigation, scene.route.key]\r\n  );\r\n\r\n  return (\r\n    <HeaderSegment\r\n      {...options}\r\n      insets={insets}\r\n      layout={layout}\r\n      scene={scene}\r\n      title={title}\r\n      leftLabel={leftLabel}\r\n      headerTitle={\r\n        typeof options.headerTitle !== 'function'\r\n          ? (props: StackHeaderTitleProps) => <HeaderTitle {...props} />\r\n          : options.headerTitle\r\n      }\r\n      onGoBack={previous ? goBack : undefined}\r\n      styleInterpolator={styleInterpolator}\r\n    />\r\n  );\r\n});\r\n"]}