{"version":3,"sources":["BaseNavigationContainer.tsx"],"names":["NOT_INITIALIZED_ERROR","serializableWarnings","Object","defineProperty","global","set","_","console","warn","e","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","React","forwardRef","initialState","onStateChange","onUnhandledAction","independent","children","ref","parent","useContext","NavigationStateContext","isDefault","Error","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","listeners","addListener","keyedListeners","addKeyedListener","dispatch","action","focus","navigation","canGoBack","result","handled","resetRoot","target","root","CommonActions","reset","getRootState","getCurrentRoute","index","emitter","addOptionsGetter","getCurrentOptions","useImperativeHandle","keys","reduce","acc","name","args","create","dangerouslyGetState","dangerouslyGetParent","onDispatchAction","noop","emit","type","data","lastEmittedOptionsRef","onOptionsChange","options","builderContext","useMemo","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","process","env","NODE_ENV","serializable","location","reason","path","pointer","params","i","length","curr","prev","test","JSON","stringify","message","includes","push","defaultOnUnhandledAction","payload","error","element"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  CommonActions,\r\n  Route,\r\n  NavigationState,\r\n  InitialState,\r\n  PartialState,\r\n  NavigationAction,\r\n} from '@react-navigation/routers';\r\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\r\nimport UnhandledActionContext from './UnhandledActionContext';\r\nimport NavigationBuilderContext from './NavigationBuilderContext';\r\nimport NavigationStateContext from './NavigationStateContext';\r\nimport NavigationRouteContext from './NavigationRouteContext';\r\nimport NavigationContext from './NavigationContext';\r\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\r\nimport useChildListeners from './useChildListeners';\r\nimport useKeyedChildListeners from './useKeyedChildListeners';\r\nimport useOptionsGetters from './useOptionsGetters';\r\nimport useEventEmitter from './useEventEmitter';\r\nimport useSyncState from './useSyncState';\r\nimport checkSerializable from './checkSerializable';\r\nimport type {\r\n  NavigationContainerEventMap,\r\n  NavigationContainerRef,\r\n  NavigationContainerProps,\r\n} from './types';\r\n\r\ntype State = NavigationState | PartialState<NavigationState> | undefined;\r\n\r\nconst NOT_INITIALIZED_ERROR =\r\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\r\n\r\nconst serializableWarnings: string[] = [];\r\n\r\ntry {\r\n  /**\r\n   * Migration instructions for removal of devtools from core\r\n   */\r\n  Object.defineProperty(\r\n    global,\r\n    'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',\r\n    {\r\n      set(_) {\r\n        console.warn(\r\n          \"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/devtools\"\r\n        );\r\n      },\r\n    }\r\n  );\r\n} catch (e) {\r\n  // Ignore\r\n}\r\n\r\n/**\r\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\r\n *\r\n * @param state Initial state object.\r\n */\r\nconst getPartialState = (\r\n  state: InitialState | undefined\r\n): PartialState<NavigationState> | undefined => {\r\n  if (state === undefined) {\r\n    return;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const { key, routeNames, ...partialState } = state;\r\n\r\n  return {\r\n    ...partialState,\r\n    stale: true,\r\n    routes: state.routes.map((route) => {\r\n      if (route.state === undefined) {\r\n        return route as Route<string> & {\r\n          state?: PartialState<NavigationState>;\r\n        };\r\n      }\r\n\r\n      return { ...route, state: getPartialState(route.state) };\r\n    }),\r\n  };\r\n};\r\n\r\n/**\r\n * Container component which holds the navigation state.\r\n * This should be rendered at the root wrapping the whole app.\r\n *\r\n * @param props.initialState Initial state object for the navigation tree.\r\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\r\n * @param props.children Child elements to render the content.\r\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\r\n */\r\nconst BaseNavigationContainer = React.forwardRef(\r\n  function BaseNavigationContainer(\r\n    {\r\n      initialState,\r\n      onStateChange,\r\n      onUnhandledAction,\r\n      independent,\r\n      children,\r\n    }: NavigationContainerProps,\r\n    ref?: React.Ref<NavigationContainerRef>\r\n  ) {\r\n    const parent = React.useContext(NavigationStateContext);\r\n\r\n    if (!parent.isDefault && !independent) {\r\n      throw new Error(\r\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\r\n      );\r\n    }\r\n\r\n    const [\r\n      state,\r\n      getState,\r\n      setState,\r\n      scheduleUpdate,\r\n      flushUpdates,\r\n    ] = useSyncState<State>(() =>\r\n      getPartialState(initialState == null ? undefined : initialState)\r\n    );\r\n\r\n    const isFirstMountRef = React.useRef<boolean>(true);\r\n\r\n    const navigatorKeyRef = React.useRef<string | undefined>();\r\n\r\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\r\n\r\n    const setKey = React.useCallback((key: string) => {\r\n      navigatorKeyRef.current = key;\r\n    }, []);\r\n\r\n    const { listeners, addListener } = useChildListeners();\r\n\r\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\r\n\r\n    const dispatch = (\r\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\r\n    ) => {\r\n      if (listeners.focus[0] == null) {\r\n        throw new Error(NOT_INITIALIZED_ERROR);\r\n      }\r\n\r\n      listeners.focus[0]((navigation) => navigation.dispatch(action));\r\n    };\r\n\r\n    const canGoBack = () => {\r\n      if (listeners.focus[0] == null) {\r\n        return false;\r\n      }\r\n\r\n      const { result, handled } = listeners.focus[0]((navigation) =>\r\n        navigation.canGoBack()\r\n      );\r\n\r\n      if (handled) {\r\n        return result;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    const resetRoot = React.useCallback(\r\n      (state?: PartialState<NavigationState> | NavigationState) => {\r\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\r\n\r\n        if (target == null) {\r\n          throw new Error(NOT_INITIALIZED_ERROR);\r\n        }\r\n\r\n        listeners.focus[0]((navigation) =>\r\n          navigation.dispatch({\r\n            ...CommonActions.reset(state),\r\n            target,\r\n          })\r\n        );\r\n      },\r\n      [keyedListeners.getState, listeners.focus]\r\n    );\r\n\r\n    const getRootState = React.useCallback(() => {\r\n      return keyedListeners.getState.root?.();\r\n    }, [keyedListeners.getState]);\r\n\r\n    const getCurrentRoute = React.useCallback(() => {\r\n      let state = getRootState();\r\n      if (state === undefined) {\r\n        return undefined;\r\n      }\r\n      while (state.routes[state.index].state !== undefined) {\r\n        state = state.routes[state.index].state as NavigationState;\r\n      }\r\n      return state.routes[state.index];\r\n    }, [getRootState]);\r\n\r\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\r\n\r\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\r\n\r\n    React.useImperativeHandle(ref, () => ({\r\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\r\n        any\r\n      >((acc, name) => {\r\n        acc[name] = (...args: any[]) =>\r\n          dispatch(\r\n            CommonActions[name](\r\n              // @ts-expect-error: we can't know the type statically\r\n              ...args\r\n            )\r\n          );\r\n        return acc;\r\n      }, {}),\r\n      ...emitter.create('root'),\r\n      resetRoot,\r\n      dispatch,\r\n      canGoBack,\r\n      getRootState,\r\n      dangerouslyGetState: () => state,\r\n      dangerouslyGetParent: () => undefined,\r\n      getCurrentRoute,\r\n      getCurrentOptions,\r\n    }));\r\n\r\n    const onDispatchAction = React.useCallback(\r\n      (action: NavigationAction, noop: boolean) => {\r\n        emitter.emit({ type: '__unsafe_action__', data: { action, noop } });\r\n      },\r\n      [emitter]\r\n    );\r\n\r\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\r\n\r\n    const onOptionsChange = React.useCallback(\r\n      (options) => {\r\n        if (lastEmittedOptionsRef.current === options) {\r\n          return;\r\n        }\r\n\r\n        lastEmittedOptionsRef.current = options;\r\n\r\n        emitter.emit({\r\n          type: 'options',\r\n          data: { options },\r\n        });\r\n      },\r\n      [emitter]\r\n    );\r\n\r\n    const builderContext = React.useMemo(\r\n      () => ({\r\n        addListener,\r\n        addKeyedListener,\r\n        onDispatchAction,\r\n        onOptionsChange,\r\n      }),\r\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\r\n    );\r\n\r\n    const scheduleContext = React.useMemo(\r\n      () => ({ scheduleUpdate, flushUpdates }),\r\n      [scheduleUpdate, flushUpdates]\r\n    );\r\n\r\n    const isInitialRef = React.useRef(true);\r\n\r\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\r\n\r\n    const context = React.useMemo(\r\n      () => ({\r\n        state,\r\n        getState,\r\n        setState,\r\n        getKey,\r\n        setKey,\r\n        getIsInitial,\r\n        addOptionsGetter,\r\n      }),\r\n      [\r\n        state,\r\n        getState,\r\n        setState,\r\n        getKey,\r\n        setKey,\r\n        getIsInitial,\r\n        addOptionsGetter,\r\n      ]\r\n    );\r\n\r\n    const onStateChangeRef = React.useRef(onStateChange);\r\n\r\n    React.useEffect(() => {\r\n      isInitialRef.current = false;\r\n      onStateChangeRef.current = onStateChange;\r\n    });\r\n\r\n    React.useEffect(() => {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (state !== undefined) {\r\n          const result = checkSerializable(state);\r\n\r\n          if (!result.serializable) {\r\n            const { location, reason } = result;\r\n\r\n            let path = '';\r\n            let pointer: Record<any, any> = state;\r\n            let params = false;\r\n\r\n            for (let i = 0; i < location.length; i++) {\r\n              const curr = location[i];\r\n              const prev = location[i - 1];\r\n\r\n              pointer = pointer[curr];\r\n\r\n              if (!params && curr === 'state') {\r\n                continue;\r\n              } else if (!params && curr === 'routes') {\r\n                if (path) {\r\n                  path += ' > ';\r\n                }\r\n              } else if (\r\n                !params &&\r\n                typeof curr === 'number' &&\r\n                prev === 'routes'\r\n              ) {\r\n                path += pointer?.name;\r\n              } else if (!params) {\r\n                path += ` > ${curr}`;\r\n                params = true;\r\n              } else {\r\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\r\n                  path += `[${curr}]`;\r\n                } else if (/^[a-z$_]+$/i.test(curr)) {\r\n                  path += `.${curr}`;\r\n                } else {\r\n                  path += `[${JSON.stringify(curr)}]`;\r\n                }\r\n              }\r\n            }\r\n\r\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\r\n\r\n            if (!serializableWarnings.includes(message)) {\r\n              serializableWarnings.push(message);\r\n              console.warn(message);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      emitter.emit({ type: 'state', data: { state } });\r\n\r\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\r\n        onStateChangeRef.current(getRootState());\r\n      }\r\n\r\n      isFirstMountRef.current = false;\r\n    }, [getRootState, emitter, state]);\r\n\r\n    const defaultOnUnhandledAction = React.useCallback(\r\n      (action: NavigationAction) => {\r\n        if (process.env.NODE_ENV === 'production') {\r\n          return;\r\n        }\r\n\r\n        const payload: Record<string, any> | undefined = action.payload;\r\n\r\n        let message = `The action '${action.type}'${\r\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\r\n        } was not handled by any navigator.`;\r\n\r\n        switch (action.type) {\r\n          case 'NAVIGATE':\r\n          case 'PUSH':\r\n          case 'REPLACE':\r\n          case 'JUMP_TO':\r\n            if (payload?.name) {\r\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\r\n            } else {\r\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\r\n            }\r\n\r\n            break;\r\n          case 'GO_BACK':\r\n          case 'POP':\r\n          case 'POP_TO_TOP':\r\n            message += `\\n\\nIs there any screen to go back to?`;\r\n            break;\r\n          case 'OPEN_DRAWER':\r\n          case 'CLOSE_DRAWER':\r\n          case 'TOGGLE_DRAWER':\r\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\r\n            break;\r\n        }\r\n\r\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\r\n\r\n        console.error(message);\r\n      },\r\n      []\r\n    );\r\n\r\n    let element = (\r\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\r\n        <NavigationBuilderContext.Provider value={builderContext}>\r\n          <NavigationStateContext.Provider value={context}>\r\n            <UnhandledActionContext.Provider\r\n              value={onUnhandledAction ?? defaultOnUnhandledAction}\r\n            >\r\n              <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\r\n            </UnhandledActionContext.Provider>\r\n          </NavigationStateContext.Provider>\r\n        </NavigationBuilderContext.Provider>\r\n      </ScheduleUpdateContext.Provider>\r\n    );\r\n\r\n    if (independent) {\r\n      // We need to clear any existing contexts for nested independent container to work correctly\r\n      element = (\r\n        <NavigationRouteContext.Provider value={undefined}>\r\n          <NavigationContext.Provider value={undefined}>\r\n            {element}\r\n          </NavigationContext.Provider>\r\n        </NavigationRouteContext.Provider>\r\n      );\r\n    }\r\n\r\n    return element;\r\n  }\r\n);\r\n\r\nexport default BaseNavigationContainer;\r\n"]}