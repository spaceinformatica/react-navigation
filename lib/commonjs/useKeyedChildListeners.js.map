{"version":3,"sources":["useKeyedChildListeners.tsx"],"names":["useKeyedChildListeners","current","keyedListeners","React","useRef","getState","beforeRemove","addKeyedListener","useCallback","type","key","listener","undefined"],"mappings":";;;;;;;AAAA;;;;;;AAGA;AACA;AACA;AAEe,SAASA,sBAAT,GAAkC;AAC/C,QAAM;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAA8BC,KAAK,CAACC,MAAN,CAOlC;AACAC,IAAAA,QAAQ,EAAE,EADV;AAEAC,IAAAA,YAAY,EAAE;AAFd,GAPkC,CAApC;AAYA,QAAMC,gBAAgB,GAAGJ,KAAK,CAACK,WAAN,CACvB,CACEC,IADF,EAEEC,GAFF,EAGEC,QAHF,KAIK;AACH;AACAT,IAAAA,cAAc,CAACO,IAAD,CAAd,CAAqBC,GAArB,IAA4BC,QAA5B;AAEA,WAAO,MAAM;AACX;AACAT,MAAAA,cAAc,CAACO,IAAD,CAAd,CAAqBC,GAArB,IAA4BE,SAA5B;AACD,KAHD;AAID,GAbsB,EAcvB,CAACV,cAAD,CAduB,CAAzB;AAiBA,SAAO;AACLA,IAAAA,cADK;AAELK,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from 'react';\r\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\r\n\r\n/**\r\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\r\n */\r\n\r\nexport default function useKeyedChildListeners() {\r\n  const { current: keyedListeners } = React.useRef<\r\n    {\r\n      [K in keyof KeyedListenerMap]: Record<\r\n        string,\r\n        KeyedListenerMap[K] | undefined\r\n      >;\r\n    }\r\n  >({\r\n    getState: {},\r\n    beforeRemove: {},\r\n  });\r\n\r\n  const addKeyedListener = React.useCallback(\r\n    <T extends keyof KeyedListenerMap>(\r\n      type: T,\r\n      key: string,\r\n      listener: KeyedListenerMap[T]\r\n    ) => {\r\n      // @ts-expect-error: listener should be correct type according to `type`\r\n      keyedListeners[type][key] = listener;\r\n\r\n      return () => {\r\n        // @ts-expect-error: listener should be correct type according to `type`\r\n        keyedListeners[type][key] = undefined;\r\n      };\r\n    },\r\n    [keyedListeners]\r\n  );\r\n\r\n  return {\r\n    keyedListeners,\r\n    addKeyedListener,\r\n  };\r\n}\r\n"]}