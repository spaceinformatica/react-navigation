{"version":3,"sources":["useOnRouteFocus.tsx"],"names":["useOnRouteFocus","router","getState","key","sourceRouteKey","setState","onRouteFocus","onRouteFocusParent","React","useContext","NavigationBuilderContext","useCallback","state","result","getStateForRouteFocus","undefined"],"mappings":";;;;;;;AAAA;;AAMA;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACe,SAASA,eAAT,CAA0D;AACvEC,EAAAA,MADuE;AAEvEC,EAAAA,QAFuE;AAGvEC,EAAAA,GAAG,EAAEC,cAHkE;AAIvEC,EAAAA;AAJuE,CAA1D,EAKK;AAClB,QAAM;AAAEC,IAAAA,YAAY,EAAEC;AAAhB,MAAuCC,KAAK,CAACC,UAAN,CAC3CC,iCAD2C,CAA7C;AAIA,SAAOF,KAAK,CAACG,WAAN,CACJR,GAAD,IAAiB;AACf,UAAMS,KAAK,GAAGV,QAAQ,EAAtB;AACA,UAAMW,MAAM,GAAGZ,MAAM,CAACa,qBAAP,CAA6BF,KAA7B,EAAoCT,GAApC,CAAf;;AAEA,QAAIU,MAAM,KAAKD,KAAf,EAAsB;AACpBP,MAAAA,QAAQ,CAACQ,MAAD,CAAR;AACD;;AAED,QAAIN,kBAAkB,KAAKQ,SAAvB,IAAoCX,cAAc,KAAKW,SAA3D,EAAsE;AACpER,MAAAA,kBAAkB,CAACH,cAAD,CAAlB;AACD;AACF,GAZI,EAaL,CAACF,QAAD,EAAWK,kBAAX,EAA+BN,MAA/B,EAAuCI,QAAvC,EAAiDD,cAAjD,CAbK,CAAP;AAeD","sourcesContent":["import * as React from 'react';\r\nimport type {\r\n  NavigationAction,\r\n  NavigationState,\r\n  Router,\r\n} from '@react-navigation/routers';\r\nimport NavigationBuilderContext from './NavigationBuilderContext';\r\n\r\ntype Options<Action extends NavigationAction> = {\r\n  router: Router<NavigationState, Action>;\r\n  getState: () => NavigationState;\r\n  setState: (state: NavigationState) => void;\r\n  key?: string;\r\n};\r\n\r\n/**\r\n * Hook to handle focus actions for a route.\r\n * Focus action needs to be treated specially, coz when a nested route is focused,\r\n * the parent navigators also needs to be focused.\r\n */\r\nexport default function useOnRouteFocus<Action extends NavigationAction>({\r\n  router,\r\n  getState,\r\n  key: sourceRouteKey,\r\n  setState,\r\n}: Options<Action>) {\r\n  const { onRouteFocus: onRouteFocusParent } = React.useContext(\r\n    NavigationBuilderContext\r\n  );\r\n\r\n  return React.useCallback(\r\n    (key: string) => {\r\n      const state = getState();\r\n      const result = router.getStateForRouteFocus(state, key);\r\n\r\n      if (result !== state) {\r\n        setState(result);\r\n      }\r\n\r\n      if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\r\n        onRouteFocusParent(sourceRouteKey);\r\n      }\r\n    },\r\n    [getState, onRouteFocusParent, router, setState, sourceRouteKey]\r\n  );\r\n}\r\n"]}