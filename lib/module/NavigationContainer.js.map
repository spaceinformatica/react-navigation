{"version":3,"sources":["NavigationContainer.tsx"],"names":["React","BaseNavigationContainer","ThemeProvider","DefaultTheme","LinkingContext","useThenable","useLinking","useDocumentTitle","useBackButton","NavigationContainer","forwardRef","theme","linking","fallback","documentTitle","onReady","rest","ref","isLinkingEnabled","enabled","refContainer","useRef","getInitialState","prefixes","isResolved","initialState","useImperativeHandle","current","linkingContext","useMemo","options","isReady","onReadyRef","useEffect"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,uBADF,QAIO,wBAJP;AAKA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,gBAAGT,KAAK,CAACU,UAAN,CAAiB,SAASD,mBAAT,CAC3C;AACEE,EAAAA,KAAK,GAAGR,YADV;AAEES,EAAAA,OAFF;AAGEC,EAAAA,QAAQ,GAAG,IAHb;AAIEC,EAAAA,aAJF;AAKEC,EAAAA,OALF;AAME,KAAGC;AANL,CAD2C,EAS3CC,GAT2C,EAU3C;AACA,QAAMC,gBAAgB,GAAGN,OAAO,GAAGA,OAAO,CAACO,OAAR,KAAoB,KAAvB,GAA+B,KAA/D;AAEA,QAAMC,YAAY,GAAGpB,KAAK,CAACqB,MAAN,CAAqC,IAArC,CAArB;AAEAb,EAAAA,aAAa,CAACY,YAAD,CAAb;AACAb,EAAAA,gBAAgB,CAACa,YAAD,EAAeN,aAAf,CAAhB;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAsBhB,UAAU,CAACc,YAAD,EAAe;AACnDD,IAAAA,OAAO,EAAED,gBAD0C;AAEnDK,IAAAA,QAAQ,EAAE,EAFyC;AAGnD,OAAGX;AAHgD,GAAf,CAAtC;AAMA,QAAM,CAACY,UAAD,EAAaC,YAAb,IAA6BpB,WAAW,CAACiB,eAAD,CAA9C;AAEAtB,EAAAA,KAAK,CAAC0B,mBAAN,CAA0BT,GAA1B,EAA+B,MAAMG,YAAY,CAACO,OAAlD;AAEA,QAAMC,cAAc,GAAG5B,KAAK,CAAC6B,OAAN,CAAc,OAAO;AAAEC,IAAAA,OAAO,EAAElB;AAAX,GAAP,CAAd,EAA4C,CAACA,OAAD,CAA5C,CAAvB;AAEA,QAAMmB,OAAO,GAAGf,IAAI,CAACS,YAAL,IAAqB,IAArB,IAA6B,CAACP,gBAA9B,IAAkDM,UAAlE;AAEA,QAAMQ,UAAU,GAAGhC,KAAK,CAACqB,MAAN,CAAaN,OAAb,CAAnB;AAEAf,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AACpBD,IAAAA,UAAU,CAACL,OAAX,GAAqBZ,OAArB;AACD,GAFD;AAIAf,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AACpB,QAAIF,OAAJ,EAAa;AAAA;;AACX,6BAAAC,UAAU,CAACL,OAAX,iFAAAK,UAAU;AACX;AACF,GAJD,EAIG,CAACD,OAAD,CAJH;;AAMA,MAAI,CAACA,OAAL,EAAc;AACZ;AACA;AACA,WAAOlB,QAAP;AACD;;AAED,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEe;AAAhC,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEjB;AAAtB,kBACE,oBAAC,uBAAD,eACMK,IADN;AAEE,IAAA,YAAY,EACVA,IAAI,CAACS,YAAL,IAAqB,IAArB,GAA4BA,YAA5B,GAA2CT,IAAI,CAACS,YAHpD;AAKE,IAAA,GAAG,EAAEL;AALP,KADF,CADF,CADF;AAaD,CA/D2B,CAA5B;AAiEA,eAAeX,mBAAf","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseNavigationContainer,\r\n  NavigationContainerProps,\r\n  NavigationContainerRef,\r\n} from '@react-navigation/core';\r\nimport ThemeProvider from './theming/ThemeProvider';\r\nimport DefaultTheme from './theming/DefaultTheme';\r\nimport LinkingContext from './LinkingContext';\r\nimport useThenable from './useThenable';\r\nimport useLinking from './useLinking';\r\nimport useDocumentTitle from './useDocumentTitle';\r\nimport useBackButton from './useBackButton';\r\nimport type { Theme, LinkingOptions, DocumentTitleOptions } from './types';\r\n\r\ntype Props = NavigationContainerProps & {\r\n  theme?: Theme;\r\n  linking?: LinkingOptions;\r\n  fallback?: React.ReactNode;\r\n  documentTitle?: DocumentTitleOptions;\r\n  onReady?: () => void;\r\n};\r\n\r\n/**\r\n * Container component which holds the navigation state designed for React Native apps.\r\n * This should be rendered at the root wrapping the whole app.\r\n *\r\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\r\n * @param props.onReady Callback which is called after the navigation tree mounts.\r\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\r\n * @param props.theme Theme object for the navigators.\r\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\r\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\r\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\r\n * @param props.children Child elements to render the content.\r\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\r\n */\r\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\r\n  {\r\n    theme = DefaultTheme,\r\n    linking,\r\n    fallback = null,\r\n    documentTitle,\r\n    onReady,\r\n    ...rest\r\n  }: Props,\r\n  ref?: React.Ref<NavigationContainerRef | null>\r\n) {\r\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\r\n\r\n  const refContainer = React.useRef<NavigationContainerRef>(null);\r\n\r\n  useBackButton(refContainer);\r\n  useDocumentTitle(refContainer, documentTitle);\r\n\r\n  const { getInitialState } = useLinking(refContainer, {\r\n    enabled: isLinkingEnabled,\r\n    prefixes: [],\r\n    ...linking,\r\n  });\r\n\r\n  const [isResolved, initialState] = useThenable(getInitialState);\r\n\r\n  React.useImperativeHandle(ref, () => refContainer.current);\r\n\r\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\r\n\r\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\r\n\r\n  const onReadyRef = React.useRef(onReady);\r\n\r\n  React.useEffect(() => {\r\n    onReadyRef.current = onReady;\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (isReady) {\r\n      onReadyRef.current?.();\r\n    }\r\n  }, [isReady]);\r\n\r\n  if (!isReady) {\r\n    // This is temporary until we have Suspense for data-fetching\r\n    // Then the fallback will be handled by a parent `Suspense` component\r\n    return fallback as React.ReactElement;\r\n  }\r\n\r\n  return (\r\n    <LinkingContext.Provider value={linkingContext}>\r\n      <ThemeProvider value={theme}>\r\n        <BaseNavigationContainer\r\n          {...rest}\r\n          initialState={\r\n            rest.initialState == null ? initialState : rest.initialState\r\n          }\r\n          ref={refContainer}\r\n        />\r\n      </ThemeProvider>\r\n    </LinkingContext.Provider>\r\n  );\r\n});\r\n\r\nexport default NavigationContainer;\r\n"]}