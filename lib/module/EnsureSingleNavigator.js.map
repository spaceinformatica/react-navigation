{"version":3,"sources":["EnsureSingleNavigator.tsx"],"names":["React","MULTIPLE_NAVIGATOR_ERROR","SingleNavigatorContext","createContext","undefined","EnsureSingleNavigator","children","navigatorKeyRef","useRef","value","useMemo","register","key","currentKey","current","Error","unregister"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAMA,MAAMC,wBAAwB,6SAA9B;AAEA,OAAO,MAAMC,sBAAsB,gBAAGF,KAAK,CAACG,aAAN,CAMpCC,SANoC,CAA/B;AAQP;AACA;AACA;;AACA,eAAe,SAASC,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAAoD;AACjE,QAAMC,eAAe,GAAGP,KAAK,CAACQ,MAAN,EAAxB;AAEA,QAAMC,KAAK,GAAGT,KAAK,CAACU,OAAN,CACZ,OAAO;AACLC,IAAAA,QAAQ,CAACC,GAAD,EAAc;AACpB,YAAMC,UAAU,GAAGN,eAAe,CAACO,OAAnC;;AAEA,UAAID,UAAU,KAAKT,SAAf,IAA4BQ,GAAG,KAAKC,UAAxC,EAAoD;AAClD,cAAM,IAAIE,KAAJ,CAAUd,wBAAV,CAAN;AACD;;AAEDM,MAAAA,eAAe,CAACO,OAAhB,GAA0BF,GAA1B;AACD,KATI;;AAULI,IAAAA,UAAU,CAACJ,GAAD,EAAc;AACtB,YAAMC,UAAU,GAAGN,eAAe,CAACO,OAAnC;;AAEA,UAAIF,GAAG,KAAKC,UAAZ,EAAwB;AACtB;AACD;;AAEDN,MAAAA,eAAe,CAACO,OAAhB,GAA0BV,SAA1B;AACD;;AAlBI,GAAP,CADY,EAqBZ,EArBY,CAAd;AAwBA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEK;AAAxC,KACGH,QADH,CADF;AAKD","sourcesContent":["import * as React from 'react';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\r\n\r\nexport const SingleNavigatorContext = React.createContext<\r\n  | {\r\n      register(key: string): void;\r\n      unregister(key: string): void;\r\n    }\r\n  | undefined\r\n>(undefined);\r\n\r\n/**\r\n * Component which ensures that there's only one navigator nested under it.\r\n */\r\nexport default function EnsureSingleNavigator({ children }: Props) {\r\n  const navigatorKeyRef = React.useRef<string | undefined>();\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      register(key: string) {\r\n        const currentKey = navigatorKeyRef.current;\r\n\r\n        if (currentKey !== undefined && key !== currentKey) {\r\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\r\n        }\r\n\r\n        navigatorKeyRef.current = key;\r\n      },\r\n      unregister(key: string) {\r\n        const currentKey = navigatorKeyRef.current;\r\n\r\n        if (key !== currentKey) {\r\n          return;\r\n        }\r\n\r\n        navigatorKeyRef.current = undefined;\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <SingleNavigatorContext.Provider value={value}>\r\n      {children}\r\n    </SingleNavigatorContext.Provider>\r\n  );\r\n}\r\n"]}