{"version":3,"sources":["useRoute.tsx"],"names":["React","NavigationRouteContext","useRoute","route","useContext","undefined","Error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,sBAAP,MAAmC,0BAAnC;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,QAAT,GAER;AACL,QAAMC,KAAK,GAAGH,KAAK,CAACI,UAAN,CAAiBH,sBAAjB,CAAd;;AAEA,MAAIE,KAAK,KAAKE,SAAd,EAAyB;AACvB,UAAM,IAAIC,KAAJ,CACJ,iFADI,CAAN;AAGD;;AAED,SAAOH,KAAP;AACD","sourcesContent":["import * as React from 'react';\r\nimport type { ParamListBase } from '@react-navigation/routers';\r\nimport NavigationRouteContext from './NavigationRouteContext';\r\nimport type { RouteProp } from './types';\r\n\r\n/**\r\n * Hook to access the route prop of the parent screen anywhere.\r\n *\r\n * @returns Route prop of the parent screen.\r\n */\r\nexport default function useRoute<\r\n  T extends RouteProp<ParamListBase, string>\r\n>(): T {\r\n  const route = React.useContext(NavigationRouteContext);\r\n\r\n  if (route === undefined) {\r\n    throw new Error(\r\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\r\n    );\r\n  }\r\n\r\n  return route as T;\r\n}\r\n"]}