{"version":3,"sources":["useNavigation.tsx"],"names":["React","NavigationContext","useNavigation","navigation","useContext","undefined","Error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,aAAT,GAER;AACL,QAAMC,UAAU,GAAGH,KAAK,CAACI,UAAN,CAAiBH,iBAAjB,CAAnB;;AAEA,MAAIE,UAAU,KAAKE,SAAnB,EAA8B;AAC5B,UAAM,IAAIC,KAAJ,CACJ,sFADI,CAAN;AAGD;;AAED,SAAOH,UAAP;AACD","sourcesContent":["import * as React from 'react';\r\nimport type { ParamListBase } from '@react-navigation/routers';\r\nimport NavigationContext from './NavigationContext';\r\nimport type { NavigationProp } from './types';\r\n\r\n/**\r\n * Hook to access the navigation prop of the parent screen anywhere.\r\n *\r\n * @returns Navigation prop of the parent screen.\r\n */\r\nexport default function useNavigation<\r\n  T extends NavigationProp<ParamListBase>\r\n>(): T {\r\n  const navigation = React.useContext(NavigationContext);\r\n\r\n  if (navigation === undefined) {\r\n    throw new Error(\r\n      \"Couldn't find a navigation object. Is your component inside a screen in a navigator?\"\r\n    );\r\n  }\r\n\r\n  return navigation as T;\r\n}\r\n"]}