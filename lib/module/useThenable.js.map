{"version":3,"sources":["useThenable.tsx"],"names":["React","useThenable","create","promise","useState","initialState","undefined","then","result","state","setState","resolved","useEffect","cancelled","resolve"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,eAAe,SAASC,WAAT,CAAwBC,MAAxB,EAAsD;AACnE,QAAM,CAACC,OAAD,IAAYH,KAAK,CAACI,QAAN,CAAeF,MAAf,CAAlB;AAEA,MAAIG,YAAsC,GAAG,CAAC,KAAD,EAAQC,SAAR,CAA7C,CAHmE,CAKnE;;AACAH,EAAAA,OAAO,CAACI,IAAR,CAAcC,MAAD,IAAY;AACvBH,IAAAA,YAAY,GAAG,CAAC,IAAD,EAAOG,MAAP,CAAf;AACD,GAFD;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACI,QAAN,CAAeC,YAAf,CAA1B;AACA,QAAM,CAACM,QAAD,IAAaF,KAAnB;AAEAT,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,QAAIC,SAAS,GAAG,KAAhB;;AAEA,UAAMC,OAAO,GAAG,YAAY;AAC1B,UAAIN,MAAJ;;AAEA,UAAI;AACFA,QAAAA,MAAM,GAAG,MAAML,OAAf;AACD,OAFD,SAEU;AACR,YAAI,CAACU,SAAL,EAAgB;AACdH,UAAAA,QAAQ,CAAC,CAAC,IAAD,EAAOF,MAAP,CAAD,CAAR;AACD;AACF;AACF,KAVD;;AAYA,QAAI,CAACG,QAAL,EAAe;AACbG,MAAAA,OAAO;AACR;;AAED,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GAtBD,EAsBG,CAACV,OAAD,EAAUQ,QAAV,CAtBH;AAwBA,SAAOF,KAAP;AACD","sourcesContent":["import * as React from 'react';\r\n\r\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\r\n  const [promise] = React.useState(create);\r\n\r\n  let initialState: [boolean, T | undefined] = [false, undefined];\r\n\r\n  // Check if our thenable is synchronous\r\n  promise.then((result) => {\r\n    initialState = [true, result];\r\n  });\r\n\r\n  const [state, setState] = React.useState(initialState);\r\n  const [resolved] = state;\r\n\r\n  React.useEffect(() => {\r\n    let cancelled = false;\r\n\r\n    const resolve = async () => {\r\n      let result;\r\n\r\n      try {\r\n        result = await promise;\r\n      } finally {\r\n        if (!cancelled) {\r\n          setState([true, result]);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (!resolved) {\r\n      resolve();\r\n    }\r\n\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, [promise, resolved]);\r\n\r\n  return state;\r\n}\r\n"]}