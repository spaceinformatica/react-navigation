{"version":3,"sources":["MaskedViewNative.tsx"],"names":["React","UIManager","RNCMaskedView","require","default","e","isMaskedViewAvailable","getViewManagerConfig","MaskedView","children","rest"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAQA,IAAIC,aAAJ;;AAEA,IAAI;AACF;AACA;AACAA,EAAAA,aAAa,GAAGC,OAAO,CAAC,qCAAD,CAAP,CAA+CC,OAA/D;AACD,CAJD,CAIE,OAAOC,CAAP,EAAU,CACV;AACD;;AAED,MAAMC,qBAAqB,GACzBL,SAAS,CAACM,oBAAV,CAA+B,eAA/B,KAAmD,IADrD;AAGA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAApB,EAAkD;AAC/D,MAAIJ,qBAAqB,IAAIJ,aAA7B,EAA4C;AAC1C,wBAAO,oBAAC,aAAD,EAAmBQ,IAAnB,EAA0BD,QAA1B,CAAP;AACD;;AAED,SAAOA,QAAP;AACD","sourcesContent":["/**\r\n * The native MaskedView that we explicitly re-export for supported platforms: Android, iOS.\r\n */\r\nimport * as React from 'react';\r\nimport { UIManager } from 'react-native';\r\n\r\ntype MaskedViewType = typeof import('@react-native-community/masked-view').default;\r\n\r\ntype Props = React.ComponentProps<MaskedViewType> & {\r\n  children: React.ReactElement;\r\n};\r\n\r\nlet RNCMaskedView: MaskedViewType | undefined;\r\n\r\ntry {\r\n  // Add try/catch to support usage even if it's not installed, since it's optional.\r\n  // Newer versions of Metro will handle it properly.\r\n  RNCMaskedView = require('@react-native-community/masked-view').default;\r\n} catch (e) {\r\n  // Ignore\r\n}\r\n\r\nconst isMaskedViewAvailable =\r\n  UIManager.getViewManagerConfig('RNCMaskedView') != null;\r\n\r\nexport default function MaskedView({ children, ...rest }: Props) {\r\n  if (isMaskedViewAvailable && RNCMaskedView) {\r\n    return <RNCMaskedView {...rest}>{children}</RNCMaskedView>;\r\n  }\r\n\r\n  return children;\r\n}\r\n"]}