{"version":3,"sources":["BorderlessButton.tsx"],"names":["React","Animated","Platform","BaseButton","AnimatedBaseButton","createAnimatedComponent","useNativeDriver","OS","BorderlessButton","Component","Value","active","spring","opacity","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","toValue","props","activeOpacity","start","onActiveStateChange","render","children","style","enabled","rest","handleActiveStateChange","borderless"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AACA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,MAAMC,kBAAkB,GAAGH,QAAQ,CAACI,uBAAT,CAAiCF,UAAjC,CAA3B;AAMA,MAAMG,eAAe,GAAGJ,QAAQ,CAACK,EAAT,KAAgB,KAAxC;AAEA,eAAe,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAAsD;AAAA;AAAA;;AAAA,qCAMjD,IAAIR,QAAQ,CAACS,KAAb,CAAmB,CAAnB,CANiD;;AAAA,qDAQhCC,MAAD,IAAqB;AAAA;;AACrD,UAAIT,QAAQ,CAACK,EAAT,KAAgB,SAApB,EAA+B;AAC7BN,QAAAA,QAAQ,CAACW,MAAT,CAAgB,KAAKC,OAArB,EAA8B;AAC5BC,UAAAA,SAAS,EAAE,IADiB;AAE5BC,UAAAA,OAAO,EAAE,GAFmB;AAG5BC,UAAAA,IAAI,EAAE,CAHsB;AAI5BC,UAAAA,iBAAiB,EAAE,IAJS;AAK5BC,UAAAA,yBAAyB,EAAE,IALC;AAM5BC,UAAAA,kBAAkB,EAAE,IANQ;AAO5BC,UAAAA,OAAO,EAAET,MAAM,GAAG,KAAKU,KAAL,CAAWC,aAAd,GAA8B,CAPjB;AAQ5BhB,UAAAA;AAR4B,SAA9B,EASGiB,KATH;AAUD;;AAED,mDAAKF,KAAL,EAAWG,mBAAX,kGAAiCb,MAAjC;AACD,KAvBkE;AAAA;;AAyBnEc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,OAAnB;AAA4B,SAAGC;AAA/B,QAAwC,KAAKR,KAAnD;AAEA,wBACE,oBAAC,kBAAD,eACMQ,IADN;AAEE,MAAA,mBAAmB,EAAE,KAAKC,uBAF5B;AAGE,MAAA,KAAK,EAAE,CACLH,KADK,EAELzB,QAAQ,CAACK,EAAT,KAAgB,KAAhB,IAAyBqB,OAAzB,IAAoC;AAAEf,QAAAA,OAAO,EAAE,KAAKA;AAAhB,OAF/B;AAHT,QAQGa,QARH,CADF;AAYD;;AAxCkE;;gBAAhDlB,gB,kBACG;AACpBc,EAAAA,aAAa,EAAE,GADK;AAEpBS,EAAAA,UAAU,EAAE;AAFQ,C","sourcesContent":["import * as React from 'react';\r\nimport { Animated, Platform } from 'react-native';\r\nimport { BaseButton } from 'react-native-gesture-handler';\r\n\r\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\r\n\r\ntype Props = React.ComponentProps<typeof BaseButton> & {\r\n  activeOpacity: number;\r\n};\r\n\r\nconst useNativeDriver = Platform.OS !== 'web';\r\n\r\nexport default class BorderlessButton extends React.Component<Props> {\r\n  static defaultProps = {\r\n    activeOpacity: 0.3,\r\n    borderless: true,\r\n  };\r\n\r\n  private opacity = new Animated.Value(1);\r\n\r\n  private handleActiveStateChange = (active: boolean) => {\r\n    if (Platform.OS !== 'android') {\r\n      Animated.spring(this.opacity, {\r\n        stiffness: 1000,\r\n        damping: 500,\r\n        mass: 3,\r\n        overshootClamping: true,\r\n        restDisplacementThreshold: 0.01,\r\n        restSpeedThreshold: 0.01,\r\n        toValue: active ? this.props.activeOpacity : 1,\r\n        useNativeDriver,\r\n      }).start();\r\n    }\r\n\r\n    this.props.onActiveStateChange?.(active);\r\n  };\r\n\r\n  render() {\r\n    const { children, style, enabled, ...rest } = this.props;\r\n\r\n    return (\r\n      <AnimatedBaseButton\r\n        {...rest}\r\n        onActiveStateChange={this.handleActiveStateChange}\r\n        style={[\r\n          style,\r\n          Platform.OS === 'ios' && enabled && { opacity: this.opacity },\r\n        ]}\r\n      >\r\n        {children}\r\n      </AnimatedBaseButton>\r\n    );\r\n  }\r\n}\r\n"]}