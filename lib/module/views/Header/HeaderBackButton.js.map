{"version":3,"sources":["HeaderBackButton.tsx"],"names":["React","Animated","I18nManager","Image","View","Platform","StyleSheet","useTheme","MaskedView","TouchableItem","HeaderBackButton","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","OS","onLabelLayout","onPress","pressColorAndroid","customPressColorAndroid","screenLayout","tintColor","customTintColor","titleLayout","truncatedLabel","accessibilityLabel","style","dark","colors","initialLabelWidth","setInitialLabelWidth","useState","undefined","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","styles","icon","Boolean","iconWithLabel","require","renderLabel","leftLabelText","labelElement","labelWrapper","minWidth","color","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","container","top","right","bottom","left","create","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Animated,\r\n  I18nManager,\r\n  Image,\r\n  View,\r\n  Platform,\r\n  StyleSheet,\r\n  LayoutChangeEvent,\r\n} from 'react-native';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport MaskedView from '../MaskedView';\r\nimport TouchableItem from '../TouchableItem';\r\nimport type { StackHeaderLeftButtonProps } from '../../types';\r\n\r\ntype Props = StackHeaderLeftButtonProps;\r\n\r\nexport default function HeaderBackButton({\r\n  disabled,\r\n  allowFontScaling,\r\n  backImage,\r\n  label,\r\n  labelStyle,\r\n  labelVisible = Platform.OS === 'ios',\r\n  onLabelLayout,\r\n  onPress,\r\n  pressColorAndroid: customPressColorAndroid,\r\n  screenLayout,\r\n  tintColor: customTintColor,\r\n  titleLayout,\r\n  truncatedLabel = 'Back',\r\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\r\n  style,\r\n}: Props) {\r\n  const { dark, colors } = useTheme();\r\n\r\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\r\n    undefined | number\r\n  >(undefined);\r\n\r\n  const tintColor =\r\n    customTintColor !== undefined\r\n      ? customTintColor\r\n      : Platform.select({\r\n          ios: colors.primary,\r\n          default: colors.text,\r\n        });\r\n\r\n  const pressColorAndroid =\r\n    customPressColorAndroid !== undefined\r\n      ? customPressColorAndroid\r\n      : dark\r\n      ? 'rgba(255, 255, 255, .32)'\r\n      : 'rgba(0, 0, 0, .32)';\r\n\r\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\r\n    onLabelLayout?.(e);\r\n\r\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\r\n  };\r\n\r\n  const shouldTruncateLabel = () => {\r\n    return (\r\n      !label ||\r\n      (initialLabelWidth &&\r\n        titleLayout &&\r\n        screenLayout &&\r\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\r\n    );\r\n  };\r\n\r\n  const renderBackImage = () => {\r\n    if (backImage) {\r\n      return backImage({ tintColor });\r\n    } else {\r\n      return (\r\n        <Image\r\n          style={[\r\n            styles.icon,\r\n            Boolean(labelVisible) && styles.iconWithLabel,\r\n            Boolean(tintColor) && { tintColor },\r\n          ]}\r\n          source={require('../assets/back-icon.png')}\r\n          fadeDuration={0}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderLabel = () => {\r\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\r\n\r\n    if (!labelVisible || leftLabelText === undefined) {\r\n      return null;\r\n    }\r\n\r\n    const labelElement = (\r\n      <View\r\n        style={\r\n          screenLayout\r\n            ? // We make the button extend till the middle of the screen\r\n              // Otherwise it appears to cut off when translating\r\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\r\n            : null\r\n        }\r\n      >\r\n        <Animated.Text\r\n          accessible={false}\r\n          onLayout={\r\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\r\n            // Only measure it when label is not truncated because we want the measurement of full label\r\n            leftLabelText === label ? handleLabelLayout : undefined\r\n          }\r\n          style={[\r\n            styles.label,\r\n            tintColor ? { color: tintColor } : null,\r\n            labelStyle,\r\n          ]}\r\n          numberOfLines={1}\r\n          allowFontScaling={!!allowFontScaling}\r\n        >\r\n          {leftLabelText}\r\n        </Animated.Text>\r\n      </View>\r\n    );\r\n\r\n    if (backImage || Platform.OS !== 'ios') {\r\n      // When a custom backimage is specified, we can't mask the label\r\n      // Otherwise there might be weird effect due to our mask not being the same as the image\r\n      return labelElement;\r\n    }\r\n\r\n    return (\r\n      <MaskedView\r\n        maskElement={\r\n          <View style={styles.iconMaskContainer}>\r\n            <Image\r\n              source={require('../assets/back-icon-mask.png')}\r\n              style={styles.iconMask}\r\n            />\r\n            <View style={styles.iconMaskFillerRect} />\r\n          </View>\r\n        }\r\n      >\r\n        {labelElement}\r\n      </MaskedView>\r\n    );\r\n  };\r\n\r\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\r\n\r\n  return (\r\n    <TouchableItem\r\n      disabled={disabled}\r\n      accessible\r\n      accessibilityRole=\"button\"\r\n      accessibilityComponentType=\"button\"\r\n      accessibilityLabel={accessibilityLabel}\r\n      accessibilityTraits=\"button\"\r\n      testID=\"header-back\"\r\n      delayPressIn={0}\r\n      onPress={disabled ? undefined : handlePress}\r\n      pressColor={pressColorAndroid}\r\n      style={[styles.container, disabled && styles.disabled, style]}\r\n      hitSlop={Platform.select({\r\n        ios: undefined,\r\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\r\n      })}\r\n      borderless\r\n    >\r\n      <React.Fragment>\r\n        {renderBackImage()}\r\n        {renderLabel()}\r\n      </React.Fragment>\r\n    </TouchableItem>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    ...Platform.select({\r\n      ios: null,\r\n      default: {\r\n        marginVertical: 3,\r\n        marginHorizontal: 11,\r\n      },\r\n    }),\r\n  },\r\n  disabled: {\r\n    opacity: 0.5,\r\n  },\r\n  label: {\r\n    fontSize: 17,\r\n    // Title and back label are a bit different width due to title being bold\r\n    // Adjusting the letterSpacing makes them coincide better\r\n    letterSpacing: 0.35,\r\n  },\r\n  labelWrapper: {\r\n    // These styles will make sure that the label doesn't fill the available space\r\n    // Otherwise it messes with the measurement of the label\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n  },\r\n  icon: Platform.select({\r\n    ios: {\r\n      height: 21,\r\n      width: 13,\r\n      marginLeft: 8,\r\n      marginRight: 22,\r\n      marginVertical: 12,\r\n      resizeMode: 'contain',\r\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\r\n    },\r\n    default: {\r\n      height: 24,\r\n      width: 24,\r\n      margin: 3,\r\n      resizeMode: 'contain',\r\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\r\n    },\r\n  }),\r\n  iconWithLabel:\r\n    Platform.OS === 'ios'\r\n      ? {\r\n          marginRight: 6,\r\n        }\r\n      : {},\r\n  iconMaskContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  iconMaskFillerRect: {\r\n    flex: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  iconMask: {\r\n    height: 21,\r\n    width: 13,\r\n    marginLeft: -14.5,\r\n    marginVertical: 12,\r\n    alignSelf: 'center',\r\n    resizeMode: 'contain',\r\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\r\n  },\r\n});\r\n"]}