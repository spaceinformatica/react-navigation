{"version":3,"sources":["CardSheet.tsx"],"names":["React","View","StyleSheet","forwardRef","CardSheet","enabled","layout","style","rest","ref","fill","setFill","useState","useEffect","document","body","width","clientWidth","height","clientHeight","styles","page","card","create","minHeight","flex","overflow"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAA0BC,UAA1B,QAA4C,cAA5C;AAQA;AACA;AACA;AACA;AACA,4BAAeF,KAAK,CAACG,UAAN,CAA8B,SAASC,SAAT,CAC3C;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,KAAnB;AAA0B,KAAGC;AAA7B,CAD2C,EAE3CC,GAF2C,EAG3C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAxB;AAEAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAI,OAAOC,QAAP,KAAoB,WAApB,IAAmC,CAACA,QAAQ,CAACC,IAAjD,EAAuD;AACrD;AACA;AACD;;AAED,UAAMC,KAAK,GAAGF,QAAQ,CAACC,IAAT,CAAcE,WAA5B;AACA,UAAMC,MAAM,GAAGJ,QAAQ,CAACC,IAAT,CAAcI,YAA7B;AAEAR,IAAAA,OAAO,CAACK,KAAK,KAAKV,MAAM,CAACU,KAAjB,IAA0BE,MAAM,KAAKZ,MAAM,CAACY,MAA7C,CAAP;AACD,GAVD,EAUG,CAACZ,MAAM,CAACY,MAAR,EAAgBZ,MAAM,CAACU,KAAvB,CAVH;AAYA,sBACE,oBAAC,IAAD,eACMR,IADN;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,KAAK,EAAE,CAACJ,OAAO,IAAIK,IAAX,GAAkBU,MAAM,CAACC,IAAzB,GAAgCD,MAAM,CAACE,IAAxC,EAA8Cf,KAA9C;AAHT,KADF;AAOD,CAzBc,CAAf;AA2BA,MAAMa,MAAM,GAAGlB,UAAU,CAACqB,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,SAAS,EAAE;AADP,GADyB;AAI/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AAJyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { View, ViewProps, StyleSheet } from 'react-native';\r\n\r\ntype Props = ViewProps & {\r\n  enabled: boolean;\r\n  layout: { width: number; height: number };\r\n  children: React.ReactNode;\r\n};\r\n\r\n// This component will render a page which overflows the screen\r\n// if the container fills the body by comparing the size\r\n// This lets the document.body handle scrolling of the content\r\n// It's necessary for mobile browsers to be able to hide address bar on scroll\r\nexport default React.forwardRef<View, Props>(function CardSheet(\r\n  { enabled, layout, style, ...rest },\r\n  ref\r\n) {\r\n  const [fill, setFill] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (typeof document === 'undefined' || !document.body) {\r\n      // Only run when DOM is available\r\n      return;\r\n    }\r\n\r\n    const width = document.body.clientWidth;\r\n    const height = document.body.clientHeight;\r\n\r\n    setFill(width === layout.width && height === layout.height);\r\n  }, [layout.height, layout.width]);\r\n\r\n  return (\r\n    <View\r\n      {...rest}\r\n      ref={ref}\r\n      style={[enabled && fill ? styles.page : styles.card, style]}\r\n    />\r\n  );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    minHeight: '100%',\r\n  },\r\n  card: {\r\n    flex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n"]}