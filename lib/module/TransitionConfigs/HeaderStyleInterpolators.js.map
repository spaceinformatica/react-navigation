{"version":3,"sources":["HeaderStyleInterpolators.tsx"],"names":["Animated","I18nManager","add","forUIKit","current","next","layouts","defaultOffset","leftSpacing","leftLabelOffset","leftLabel","screen","width","titleLeftOffset","title","rightOffset","progress","interpolate","inputRange","outputRange","extrapolate","leftButtonStyle","opacity","leftLabelStyle","transform","translateX","isRTL","rightButtonStyle","titleStyle","backgroundStyle","forFade","forSlideLeft","forSlideRight","forSlideUp","header","translateY","height","forNoAnimation"],"mappings":"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","sourcesContent":["import { Animated, I18nManager } from 'react-native';\r\nimport type {\r\n  StackHeaderInterpolationProps,\r\n  StackHeaderInterpolatedStyle,\r\n} from '../types';\r\n\r\nconst { add } = Animated;\r\n\r\n/**\r\n * Standard UIKit style animation for the header where the title fades into the back button label.\r\n */\r\nexport function forUIKit({\r\n  current,\r\n  next,\r\n  layouts,\r\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\r\n  const defaultOffset = 100;\r\n  const leftSpacing = 27;\r\n\r\n  // The title and back button title should cross-fade to each other\r\n  // When screen is fully open, the title should be in center, and back title should be on left\r\n  // When screen is closing, the previous title will animate to back title's position\r\n  // And back title will animate to title's position\r\n  // We achieve this by calculating the offsets needed to translate title to back title's position and vice-versa\r\n  const leftLabelOffset = layouts.leftLabel\r\n    ? (layouts.screen.width - layouts.leftLabel.width) / 2 - leftSpacing\r\n    : defaultOffset;\r\n  const titleLeftOffset = layouts.title\r\n    ? (layouts.screen.width - layouts.title.width) / 2 - leftSpacing\r\n    : defaultOffset;\r\n\r\n  // When the current title is animating to right, it is centered in the right half of screen in middle of transition\r\n  // The back title also animates in from this position\r\n  const rightOffset = layouts.screen.width / 4;\r\n\r\n  const progress = add(\r\n    current.progress.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0, 1],\r\n      extrapolate: 'clamp',\r\n    }),\r\n    next\r\n      ? next.progress.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [0, 1],\r\n          extrapolate: 'clamp',\r\n        })\r\n      : 0\r\n  );\r\n\r\n  return {\r\n    leftButtonStyle: {\r\n      opacity: progress.interpolate({\r\n        inputRange: [0.3, 1, 1.5],\r\n        outputRange: [0, 1, 0],\r\n      }),\r\n    },\r\n    leftLabelStyle: {\r\n      transform: [\r\n        {\r\n          translateX: progress.interpolate({\r\n            inputRange: [0, 1, 2],\r\n            outputRange: I18nManager.isRTL\r\n              ? [-rightOffset, 0, leftLabelOffset]\r\n              : [leftLabelOffset, 0, -rightOffset],\r\n          }),\r\n        },\r\n      ],\r\n    },\r\n    rightButtonStyle: {\r\n      opacity: progress.interpolate({\r\n        inputRange: [0.3, 1, 1.5],\r\n        outputRange: [0, 1, 0],\r\n      }),\r\n    },\r\n    titleStyle: {\r\n      opacity: progress.interpolate({\r\n        inputRange: [0, 0.4, 1, 1.5],\r\n        outputRange: [0, 0.1, 1, 0],\r\n      }),\r\n      transform: [\r\n        {\r\n          translateX: progress.interpolate({\r\n            inputRange: [0.5, 1, 2],\r\n            outputRange: I18nManager.isRTL\r\n              ? [-titleLeftOffset, 0, rightOffset]\r\n              : [rightOffset, 0, -titleLeftOffset],\r\n          }),\r\n        },\r\n      ],\r\n    },\r\n    backgroundStyle: {\r\n      transform: [\r\n        {\r\n          translateX: progress.interpolate({\r\n            inputRange: [0, 1, 2],\r\n            outputRange: I18nManager.isRTL\r\n              ? [-layouts.screen.width, 0, layouts.screen.width]\r\n              : [layouts.screen.width, 0, -layouts.screen.width],\r\n          }),\r\n        },\r\n      ],\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Simple fade animation for the header elements.\r\n */\r\nexport function forFade({\r\n  current,\r\n  next,\r\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\r\n  const progress = add(\r\n    current.progress.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0, 1],\r\n      extrapolate: 'clamp',\r\n    }),\r\n    next\r\n      ? next.progress.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [0, 1],\r\n          extrapolate: 'clamp',\r\n        })\r\n      : 0\r\n  );\r\n\r\n  const opacity = progress.interpolate({\r\n    inputRange: [0, 1, 2],\r\n    outputRange: [0, 1, 0],\r\n  });\r\n\r\n  return {\r\n    leftButtonStyle: { opacity },\r\n    rightButtonStyle: { opacity },\r\n    titleStyle: { opacity },\r\n    backgroundStyle: {\r\n      opacity: progress.interpolate({\r\n        inputRange: [0, 1, 1.9, 2],\r\n        outputRange: [0, 1, 1, 0],\r\n      }),\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Simple translate animation to translate the header to left.\r\n */\r\nexport function forSlideLeft({\r\n  current,\r\n  next,\r\n  layouts: { screen },\r\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\r\n  const progress = add(\r\n    current.progress.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0, 1],\r\n      extrapolate: 'clamp',\r\n    }),\r\n    next\r\n      ? next.progress.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [0, 1],\r\n          extrapolate: 'clamp',\r\n        })\r\n      : 0\r\n  );\r\n\r\n  const translateX = progress.interpolate({\r\n    inputRange: [0, 1, 2],\r\n    outputRange: I18nManager.isRTL\r\n      ? [-screen.width, 0, screen.width]\r\n      : [screen.width, 0, -screen.width],\r\n  });\r\n\r\n  const transform = [{ translateX }];\r\n\r\n  return {\r\n    leftButtonStyle: { transform },\r\n    rightButtonStyle: { transform },\r\n    titleStyle: { transform },\r\n    backgroundStyle: { transform },\r\n  };\r\n}\r\n\r\n/**\r\n * Simple translate animation to translate the header to right.\r\n */\r\nexport function forSlideRight({\r\n  current,\r\n  next,\r\n  layouts: { screen },\r\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\r\n  const progress = add(\r\n    current.progress.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0, 1],\r\n      extrapolate: 'clamp',\r\n    }),\r\n    next\r\n      ? next.progress.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [0, 1],\r\n          extrapolate: 'clamp',\r\n        })\r\n      : 0\r\n  );\r\n\r\n  const translateX = progress.interpolate({\r\n    inputRange: [0, 1, 2],\r\n    outputRange: I18nManager.isRTL\r\n      ? [screen.width, 0, -screen.width]\r\n      : [-screen.width, 0, screen.width],\r\n  });\r\n\r\n  const transform = [{ translateX }];\r\n\r\n  return {\r\n    leftButtonStyle: { transform },\r\n    rightButtonStyle: { transform },\r\n    titleStyle: { transform },\r\n    backgroundStyle: { transform },\r\n  };\r\n}\r\n\r\n/**\r\n * Simple translate animation to translate the header to slide up.\r\n */\r\nexport function forSlideUp({\r\n  current,\r\n  next,\r\n  layouts: { header },\r\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\r\n  const progress = add(\r\n    current.progress.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0, 1],\r\n      extrapolate: 'clamp',\r\n    }),\r\n    next\r\n      ? next.progress.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [0, 1],\r\n          extrapolate: 'clamp',\r\n        })\r\n      : 0\r\n  );\r\n\r\n  const translateY = progress.interpolate({\r\n    inputRange: [0, 1, 2],\r\n    outputRange: [-header.height, 0, -header.height],\r\n  });\r\n\r\n  const transform = [{ translateY }];\r\n\r\n  return {\r\n    leftButtonStyle: { transform },\r\n    rightButtonStyle: { transform },\r\n    titleStyle: { transform },\r\n    backgroundStyle: { transform },\r\n  };\r\n}\r\n\r\nexport function forNoAnimation(): StackHeaderInterpolatedStyle {\r\n  return {};\r\n}\r\n"]}